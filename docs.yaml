openapi: 3.0.0
info:
  title: API de Gerenciamento de Usuários e Peixes
  version: 1.0.0
  description: Esta API gerencia usuários e peixes, permitindo operações de criação, leitura, atualização e exclusão.
servers:
  - url: https://api-peixes.vercel.app
    description: Servidor de Produção
tags:
  - name: Usuários
    description: Operações sobre os usuários
  - name: Peixes
    description: Operações sobre os peixes
paths:
  /api/users:
    get:
      tags:
        - Usuários
      summary: Lista todos os usuários
      responses:
        '200':
          description: Retorna uma lista de todos os usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      tags:
        - Usuários
      summary: Cria um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Usuário criado com sucesso
        '400':
          description: Erro na solicitação
  /api/users/{id}:
    put:
      tags:
        - Usuários
      summary: Atualiza um usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID do usuário a ser atualizado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuário atualizado com sucesso
        '404':
          description: Usuário não encontrado
    delete:
      tags:
        - Usuários
      summary: Deleta um usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID do usuário a ser deletado
      responses:
        '200':
          description: Usuário deletado com sucesso
        '404':
          description: Usuário não encontrado
  /api/users/login:
    post:
      tags:
        - Usuários
      summary: Login de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
        '401':
          description: Credenciais inválidas
  /api/peixes:
    get:
      tags:
        - Peixes
      summary: Lista todos os peixes
      responses:
        '200':
          description: Lista de todos os peixes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peixe'
        '404':
          description: Nenhum peixe encontrado
    post:
      tags:
        - Peixes
      summary: Adiciona um novo peixe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Peixe'
      responses:
        '201':
          description: Peixe adicionado com sucesso
        '400':
          description: Dados obrigatórios ausentes
  /api/peixes/{id}:
    get:
      tags:
        - Peixes
      summary: Obtém um peixe pelo ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID do peixe
      responses:
        '200':
          description: Detalhes do peixe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Peixe'
        '404':
          description: Peixe não encontrado
    put:
      tags:
        - Peixes
      summary: Atualiza um peixe existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Peixe'
      responses:
        '200':
          description: Peixe atualizado com sucesso
        '404':
          description: Peixe não encontrado
    delete:
      tags:
        - Peixes
      summary: Deleta um peixe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Peixe deletado com sucesso
        '404':
          description: Peixe não encontrado
components:
  schemas:
    Usuario:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - name
        - email
        - password
    Peixe:
      type: object
      properties:
        Especie:
          type: string
        Nome:
          type: string
        Tempo_alimentacao:
          type: string
        Quantidade:
          type: integer
        Alimentacao:
          type: string
        Imagem:
          type: string
        ID_usuario:
          type: string
      required:
        - Especie
        - Nome
        - Tempo_alimentacao
        - Quantidade
        - Alimentacao
        - Imagem
        - ID_usuario
